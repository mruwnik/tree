#############################################################################
# Makefile for building: tree-qt
# Generated by qmake (2.01a) (Qt 4.8.2) on: Mon Nov 11 20:23:59 2013
# Project:  tree-qt.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile tree-qt.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt/mkspecs/linux-g++-64 -I. -I/usr/lib64/qt/include/QtCore -I/usr/lib64/qt/include/QtGui -I/usr/lib64/qt/include/QtOpenGL -I/usr/lib64/qt/include -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1 -Wl,-rpath,/usr/lib64/qt/lib
LIBS          = $(SUBLIBS)  -L/usr/lib64/qt/lib -L/usr/X11R6/lib64 -lGLEW -lGLU -lpng -lQtOpenGL -L/usr/lib64/qt/lib -L/usr/X11R6/lib64 -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		bud.cpp \
		leaf.cpp \
		objloader.cpp \
		parts.cpp \
		segment.cpp \
		tree.cpp \
		glade.cpp \
		texture.cpp \
		glsl.cpp \
		weather.cpp \
		treeparams.cpp moc_mainwindow.cpp \
		moc_tree.cpp \
		moc_glade.cpp \
		moc_weather.cpp \
		qrc_envTest.cpp
OBJECTS       = main.o \
		mainwindow.o \
		bud.o \
		leaf.o \
		objloader.o \
		parts.o \
		segment.o \
		tree.o \
		glade.o \
		texture.o \
		glsl.o \
		weather.o \
		treeparams.o \
		moc_mainwindow.o \
		moc_tree.o \
		moc_glade.o \
		moc_weather.o \
		qrc_envTest.o
DIST          = /usr/lib64/qt/mkspecs/common/unix.conf \
		/usr/lib64/qt/mkspecs/common/linux.conf \
		/usr/lib64/qt/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt/mkspecs/common/g++-base.conf \
		/usr/lib64/qt/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt/mkspecs/qconfig.pri \
		/usr/lib64/qt/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib64/qt/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt/mkspecs/features/qt_config.prf \
		/usr/lib64/qt/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt/mkspecs/features/default_pre.prf \
		/usr/lib64/qt/mkspecs/features/release.prf \
		/usr/lib64/qt/mkspecs/features/default_post.prf \
		/usr/lib64/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt/mkspecs/features/warn_on.prf \
		/usr/lib64/qt/mkspecs/features/qt.prf \
		/usr/lib64/qt/mkspecs/features/unix/opengl.prf \
		/usr/lib64/qt/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt/mkspecs/features/moc.prf \
		/usr/lib64/qt/mkspecs/features/resources.prf \
		/usr/lib64/qt/mkspecs/features/uic.prf \
		/usr/lib64/qt/mkspecs/features/yacc.prf \
		/usr/lib64/qt/mkspecs/features/lex.prf \
		/usr/lib64/qt/mkspecs/features/include_source_dir.prf \
		tree-qt.pro
QMAKE_TARGET  = tree-qt
DESTDIR       = 
TARGET        = tree-qt

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: tree-qt.pro  /usr/lib64/qt/mkspecs/linux-g++-64/qmake.conf /usr/lib64/qt/mkspecs/common/unix.conf \
		/usr/lib64/qt/mkspecs/common/linux.conf \
		/usr/lib64/qt/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt/mkspecs/common/g++-base.conf \
		/usr/lib64/qt/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt/mkspecs/qconfig.pri \
		/usr/lib64/qt/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib64/qt/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt/mkspecs/features/qt_config.prf \
		/usr/lib64/qt/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt/mkspecs/features/default_pre.prf \
		/usr/lib64/qt/mkspecs/features/release.prf \
		/usr/lib64/qt/mkspecs/features/default_post.prf \
		/usr/lib64/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt/mkspecs/features/warn_on.prf \
		/usr/lib64/qt/mkspecs/features/qt.prf \
		/usr/lib64/qt/mkspecs/features/unix/opengl.prf \
		/usr/lib64/qt/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt/mkspecs/features/moc.prf \
		/usr/lib64/qt/mkspecs/features/resources.prf \
		/usr/lib64/qt/mkspecs/features/uic.prf \
		/usr/lib64/qt/mkspecs/features/yacc.prf \
		/usr/lib64/qt/mkspecs/features/lex.prf \
		/usr/lib64/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib64/qt/lib/libQtOpenGL.prl \
		/usr/lib64/qt/lib/libQtGui.prl \
		/usr/lib64/qt/lib/libQtCore.prl
	$(QMAKE) -o Makefile tree-qt.pro
/usr/lib64/qt/mkspecs/common/unix.conf:
/usr/lib64/qt/mkspecs/common/linux.conf:
/usr/lib64/qt/mkspecs/common/gcc-base.conf:
/usr/lib64/qt/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt/mkspecs/common/g++-base.conf:
/usr/lib64/qt/mkspecs/common/g++-unix.conf:
/usr/lib64/qt/mkspecs/qconfig.pri:
/usr/lib64/qt/mkspecs/modules/qt_phonon.pri:
/usr/lib64/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/lib64/qt/mkspecs/features/qt_functions.prf:
/usr/lib64/qt/mkspecs/features/qt_config.prf:
/usr/lib64/qt/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt/mkspecs/features/default_pre.prf:
/usr/lib64/qt/mkspecs/features/release.prf:
/usr/lib64/qt/mkspecs/features/default_post.prf:
/usr/lib64/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib64/qt/mkspecs/features/warn_on.prf:
/usr/lib64/qt/mkspecs/features/qt.prf:
/usr/lib64/qt/mkspecs/features/unix/opengl.prf:
/usr/lib64/qt/mkspecs/features/unix/thread.prf:
/usr/lib64/qt/mkspecs/features/moc.prf:
/usr/lib64/qt/mkspecs/features/resources.prf:
/usr/lib64/qt/mkspecs/features/uic.prf:
/usr/lib64/qt/mkspecs/features/yacc.prf:
/usr/lib64/qt/mkspecs/features/lex.prf:
/usr/lib64/qt/mkspecs/features/include_source_dir.prf:
/usr/lib64/qt/lib/libQtOpenGL.prl:
/usr/lib64/qt/lib/libQtGui.prl:
/usr/lib64/qt/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile tree-qt.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/tree-qt1.0.0 || $(MKDIR) .tmp/tree-qt1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/tree-qt1.0.0/ && $(COPY_FILE) --parents mainwindow.h bud.h leaf.h objloader.h parts.h segment.h tree.h glade.h texture.h glsl.h weather.h treeparams.h .tmp/tree-qt1.0.0/ && $(COPY_FILE) --parents envTest.qrc .tmp/tree-qt1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp bud.cpp leaf.cpp objloader.cpp parts.cpp segment.cpp tree.cpp glade.cpp texture.cpp glsl.cpp weather.cpp treeparams.cpp .tmp/tree-qt1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/tree-qt1.0.0/ && (cd `dirname .tmp/tree-qt1.0.0` && $(TAR) tree-qt1.0.0.tar tree-qt1.0.0 && $(COMPRESS) tree-qt1.0.0.tar) && $(MOVE) `dirname .tmp/tree-qt1.0.0`/tree-qt1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/tree-qt1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


install:

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_tree.cpp moc_glade.cpp moc_weather.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_tree.cpp moc_glade.cpp moc_weather.cpp
moc_mainwindow.cpp: mainwindow.h
	/usr/lib64/qt/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_tree.cpp: treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h \
		tree.h
	/usr/lib64/qt/bin/moc $(DEFINES) $(INCPATH) tree.h -o moc_tree.cpp

moc_glade.cpp: tree.h \
		treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h \
		glade.h
	/usr/lib64/qt/bin/moc $(DEFINES) $(INCPATH) glade.h -o moc_glade.cpp

moc_weather.cpp: weather.h
	/usr/lib64/qt/bin/moc $(DEFINES) $(INCPATH) weather.h -o moc_weather.cpp

compiler_rcc_make_all: qrc_envTest.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_envTest.cpp
qrc_envTest.cpp: envTest.qrc \
		textures/bark.png \
		textures/leaf.png \
		textures/bud1.png \
		textures/leaf1.png \
		leaf.frag \
		leaf.vert
	/usr/lib64/qt/bin/rcc -name envTest envTest.qrc -o qrc_envTest.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui \
		glade.h \
		tree.h \
		treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h
	/usr/lib64/qt/bin/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp glade.h \
		tree.h \
		treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h \
		glade.h \
		tree.h \
		treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h \
		weather.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

bud.o: bud.cpp bud.h \
		parts.h \
		leaf.h \
		glsl.h \
		texture.h \
		segment.h \
		objloader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bud.o bud.cpp

leaf.o: leaf.cpp leaf.h \
		glsl.h \
		parts.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o leaf.o leaf.cpp

objloader.o: objloader.cpp objloader.h \
		texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objloader.o objloader.cpp

parts.o: parts.cpp parts.h \
		weather.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parts.o parts.cpp

segment.o: segment.cpp segment.h \
		parts.h \
		bud.h \
		leaf.h \
		glsl.h \
		texture.h \
		objloader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o segment.o segment.cpp

tree.o: tree.cpp tree.h \
		treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h \
		weather.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tree.o tree.cpp

glade.o: glade.cpp glade.h \
		tree.h \
		treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h \
		weather.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glade.o glade.cpp

texture.o: texture.cpp texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o texture.o texture.cpp

glsl.o: glsl.cpp glsl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glsl.o glsl.cpp

weather.o: weather.cpp weather.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o weather.o weather.cpp

treeparams.o: treeparams.cpp treeparams.h \
		leaf.h \
		glsl.h \
		parts.h \
		texture.h \
		segment.h \
		bud.h \
		objloader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o treeparams.o treeparams.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_tree.o: moc_tree.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tree.o moc_tree.cpp

moc_glade.o: moc_glade.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_glade.o moc_glade.cpp

moc_weather.o: moc_weather.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_weather.o moc_weather.cpp

qrc_envTest.o: qrc_envTest.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_envTest.o qrc_envTest.cpp

####### Install

install_install_it: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/dan/ || $(MKDIR) $(INSTALL_ROOT)/home/dan/ 
	-$(INSTALL_FILE) /home/dan/programs/c++/tree-qt/leaf.vert $(INSTALL_ROOT)/home/dan/
	-$(INSTALL_FILE) /home/dan/programs/c++/tree-qt/leaf.frag $(INSTALL_ROOT)/home/dan/


uninstall_install_it:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/home/dan/leaf.vert 
	 -$(DEL_FILE) -r $(INSTALL_ROOT)/home/dan/leaf.frag
	-$(DEL_DIR) $(INSTALL_ROOT)/home/dan/ 


install:  install_install_it  FORCE

uninstall: uninstall_install_it   FORCE

FORCE:

